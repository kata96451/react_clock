{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","log","prevProps","clockName","props","clearInterval","className","toLocaleTimeString","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","classNameId","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1BM,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAZP,gCAeE,SAAmBS,GACjB,IAAQC,EAAcP,KAAKQ,MAAnBD,UAEJD,EAAUC,YAAcA,GAE1BH,QAAQC,IAAR,uBAA4BC,EAAUC,UAAtC,eAAsDA,MApB5D,kCAwBE,WACEN,OAAOQ,cAAcT,KAAKD,WAzB9B,oBA4BE,WACE,IAAQQ,EAAcP,KAAKQ,MAAnBD,UACAV,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAGF,YAED,sBAAMG,UAAU,cAAhB,SACGb,EAAKc,8BAzChB,GAA2BC,aCD3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAGX,IAAMK,EAAb,4MACEvB,MAAyB,CACvBwB,UAAU,EACVb,UAAWM,KAHf,EAMEQ,YAAc,EANhB,uDAQE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,WACjC,EAAKpB,SAAS,CAAEiB,UAAU,IAE1BE,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKtB,SAAS,CAAEiB,UAAU,UAI9BpB,KAAKqB,YAAcpB,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAEI,UAAWM,QAC1B,QApBP,kCAuBE,WACEZ,OAAOQ,cAAcT,KAAKqB,eAxB9B,oBA2BE,WACE,MAAgCrB,KAAKJ,MAA7BwB,EAAR,EAAQA,SAAUb,EAAlB,EAAkBA,UAElB,OACE,sBAAKG,UAAU,MAAf,UACE,6CAECU,GAAY,cAAC,EAAD,CAAOb,UAAWA,WAlCvC,GAAyBK,aCZzBc,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.a9933dbb.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\n\ninterface Props {\n  clockName: string,\n}\n\ninterface State {\n  date: Date;\n}\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line no-console\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { clockName } = this.props;\n\n    if (prevProps.clockName !== clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevProps.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render(): ReactNode {\n    const { clockName } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ninterface State {\n  hasClock: boolean;\n  clockName: string;\n}\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: false,\n    clockName: getRandomName(),\n  };\n\n  classNameId = 0;\n\n  componentDidMount() {\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n\n      document.addEventListener('contextmenu', (event: MouseEvent) => {\n        event.preventDefault();\n        this.setState({ hasClock: false });\n      });\n    });\n\n    this.classNameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.classNameId);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}